'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _libServer = require('../../lib/server');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var TEST_PORT = 4788;
var TEST_HOST = "localhost";

var server = undefined,
    driver = undefined;

describe('Driver', function () {
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _libServer.startServer)(TEST_PORT, TEST_HOST));

        case 2:
          server = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(server.close());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  beforeEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          driver = _wd2['default'].promiseChainRemote(TEST_HOST, TEST_PORT);

        case 1:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.quit());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should run a basic session using a real client', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.init({
            app: "Microsoft.WindowsCalculator_8wekyb3d8bbwe!App",
            platformName: "Windows",
            deviceName: "WindowsPC"
          }));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.elementByName("Calculator"));

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2RyaXZlci1lMmUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O2tCQUFlLElBQUk7Ozs7b0JBQ0YsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7eUJBQ2pCLGtCQUFrQjs7QUFDOUMsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUM7QUFDdkIsSUFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDOztBQUU5QixJQUFJLE1BQU0sWUFBQTtJQUFFLE1BQU0sWUFBQSxDQUFDOztBQUVuQixRQUFRLENBQUMsUUFBUSxFQUFFLFlBQVk7QUFDN0IsUUFBTSxDQUFDOzs7OzsyQ0FDVSw0QkFBWSxTQUFTLEVBQUUsU0FBUyxDQUFDOzs7QUFBaEQsZ0JBQU07Ozs7Ozs7R0FDUCxDQUFDLENBQUM7O0FBRUgsT0FBSyxDQUFDOzs7OzsyQ0FDRSxNQUFNLENBQUMsS0FBSyxFQUFFOzs7Ozs7O0dBQ3JCLENBQUMsQ0FBQzs7QUFFSCxZQUFVLENBQUM7Ozs7QUFDVCxnQkFBTSxHQUFHLGdCQUFHLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQzs7Ozs7OztHQUN0RCxDQUFDLENBQUM7O0FBRUgsV0FBUyxDQUFDOzs7OzsyQ0FDRixNQUFNLENBQUMsSUFBSSxFQUFFOzs7Ozs7O0dBQ3BCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsZ0RBQWdELEVBQUU7Ozs7OzJDQUM3QyxNQUFNLENBQUMsSUFBSSxDQUFDO0FBQ2hCLGVBQUcsRUFBRSwrQ0FBK0M7QUFDcEQsd0JBQVksRUFBRSxTQUFTO0FBQ3ZCLHNCQUFVLEVBQUUsV0FBVztXQUN4QixDQUFDOzs7OzJDQUNJLE1BQU0sQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDOzs7Ozs7O0dBQ3pDLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2UyZS9kcml2ZXItZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdkIGZyb20gJ3dkJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IHsgc3RhcnRTZXJ2ZXIgfSBmcm9tICcuLi8uLi9saWIvc2VydmVyJztcbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmNvbnN0IFRFU1RfUE9SVCA9IDQ3ODg7XG5jb25zdCBURVNUX0hPU1QgPSBcImxvY2FsaG9zdFwiO1xuXG5sZXQgc2VydmVyLCBkcml2ZXI7XG5cbmRlc2NyaWJlKCdEcml2ZXInLCBmdW5jdGlvbiAoKSB7XG4gIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgc2VydmVyID0gYXdhaXQgc3RhcnRTZXJ2ZXIoVEVTVF9QT1JULCBURVNUX0hPU1QpO1xuICB9KTtcblxuICBhZnRlcihhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgYXdhaXQgc2VydmVyLmNsb3NlKCk7XG4gIH0pO1xuXG4gIGJlZm9yZUVhY2goYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGRyaXZlciA9IHdkLnByb21pc2VDaGFpblJlbW90ZShURVNUX0hPU1QsIFRFU1RfUE9SVCk7XG4gIH0pO1xuXG4gIGFmdGVyRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgYXdhaXQgZHJpdmVyLnF1aXQoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBydW4gYSBiYXNpYyBzZXNzaW9uIHVzaW5nIGEgcmVhbCBjbGllbnQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgYXdhaXQgZHJpdmVyLmluaXQoe1xuICAgICAgYXBwOiBcIk1pY3Jvc29mdC5XaW5kb3dzQ2FsY3VsYXRvcl84d2VreWIzZDhiYndlIUFwcFwiLFxuICAgICAgcGxhdGZvcm1OYW1lOiBcIldpbmRvd3NcIixcbiAgICAgIGRldmljZU5hbWU6IFwiV2luZG93c1BDXCJcbiAgICB9KTtcbiAgICBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5TmFtZShcIkNhbGN1bGF0b3JcIik7XG4gIH0pO1xufSk7Il0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
