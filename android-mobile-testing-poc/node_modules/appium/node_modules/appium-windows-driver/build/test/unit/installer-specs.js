'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _libInstaller = require('../../lib/installer');

var _appiumSupport = require('appium-support');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('downloading WAD', function () {
  var isWindowsStub = undefined;
  before(function () {
    isWindowsStub = _sinon2['default'].stub(_appiumSupport.system, "isWindows").returns(false);
  });
  after(function () {
    isWindowsStub.restore();
  });

  it('should throw an error if we are not on windows', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _libInstaller.setupWAD)().should.be.rejectedWith(/Windows/));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdW5pdC9pbnN0YWxsZXItc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OzRCQUF5QixxQkFBcUI7OzZCQUN2QixnQkFBZ0I7O29CQUN0QixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7OztxQkFDM0IsT0FBTzs7OztBQUV6QixrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxZQUFZO0FBQ3RDLE1BQUksYUFBYSxZQUFBLENBQUM7QUFDbEIsUUFBTSxDQUFDLFlBQVk7QUFDakIsaUJBQWEsR0FBRyxtQkFBTSxJQUFJLHdCQUFTLFdBQVcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztHQUNoRSxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUMsWUFBWTtBQUNoQixpQkFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDO0dBQ3pCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsZ0RBQWdELEVBQUU7Ozs7OzJDQUM3Qyw2QkFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQzs7Ozs7OztHQUNuRCxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC91bml0L2luc3RhbGxlci1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldHVwV0FEIH0gZnJvbSAnLi4vLi4vbGliL2luc3RhbGxlcic7XG5pbXBvcnQgeyBzeXN0ZW0gfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBzaW5vbiBmcm9tICdzaW5vbic7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdkb3dubG9hZGluZyBXQUQnLCBmdW5jdGlvbiAoKSB7XG4gIGxldCBpc1dpbmRvd3NTdHViO1xuICBiZWZvcmUoZnVuY3Rpb24gKCkge1xuICAgIGlzV2luZG93c1N0dWIgPSBzaW5vbi5zdHViKHN5c3RlbSwgXCJpc1dpbmRvd3NcIikucmV0dXJucyhmYWxzZSk7XG4gIH0pO1xuICBhZnRlcihmdW5jdGlvbiAoKSB7XG4gICAgaXNXaW5kb3dzU3R1Yi5yZXN0b3JlKCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgdGhyb3cgYW4gZXJyb3IgaWYgd2UgYXJlIG5vdCBvbiB3aW5kb3dzJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGF3YWl0IHNldHVwV0FEKCkuc2hvdWxkLmJlLnJlamVjdGVkV2l0aCgvV2luZG93cy8pO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
