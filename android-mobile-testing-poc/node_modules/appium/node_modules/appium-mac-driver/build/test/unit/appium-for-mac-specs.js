require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _libAppiumForMac = require('../../lib/appium-for-mac');

var _libAppiumForMac2 = _interopRequireDefault(_libAppiumForMac);

var _appiumTestSupport = require('appium-test-support');

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

function buildAppiumForMacOpts() {
  return {
    app: 'foo',
    platformName: 'Mac',
    host: 'localhost',
    port: 4623
  };
}

describe('AppiumForMac', function () {
  describe('#startSession', (0, _appiumTestSupport.withSandbox)({}, function (S) {
    var appium4MacDriver = new _libAppiumForMac2['default'](buildAppiumForMacOpts());

    afterEach(function () {
      S.verify();
    });

    it('should start a session', function callee$2$0() {
      var caps;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            caps = { foo: 'bar' };

            S.mocks.jwproxy = S.sandbox.mock(appium4MacDriver.jwproxy);
            S.mocks.jwproxy.expects("command").once().withExactArgs("/session", "POST", { desiredCapabilities: caps }).returns(_bluebird2['default'].resolve());
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(appium4MacDriver.startSession(caps));

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdW5pdC9hcHBpdW0tZm9yLW1hYy1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztvQkFFaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7K0JBQ3BCLDBCQUEwQjs7OztpQ0FDdkIscUJBQXFCOzt3QkFDbkMsVUFBVTs7OztBQUd4QixrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFNBQVMscUJBQXFCLEdBQUk7QUFDaEMsU0FBTztBQUNMLE9BQUcsRUFBRSxLQUFLO0FBQ1YsZ0JBQVksRUFBRSxLQUFLO0FBQ25CLFFBQUksRUFBRSxXQUFXO0FBQ2pCLFFBQUksRUFBRSxJQUFJO0dBQ1gsQ0FBQztDQUNIOztBQUVELFFBQVEsQ0FBQyxjQUFjLEVBQUUsWUFBWTtBQUNuQyxVQUFRLENBQUMsZUFBZSxFQUFFLG9DQUFZLEVBQUUsRUFBRSxVQUFDLENBQUMsRUFBSztBQUMvQyxRQUFJLGdCQUFnQixHQUFHLGlDQUFpQixxQkFBcUIsRUFBRSxDQUFDLENBQUM7O0FBRWpFLGFBQVMsQ0FBQyxZQUFZO0FBQ3BCLE9BQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztLQUNaLENBQUMsQ0FBQzs7QUFFSCxNQUFFLENBQUMsd0JBQXdCLEVBQUU7VUFDdkIsSUFBSTs7OztBQUFKLGdCQUFJLEdBQUcsRUFBQyxHQUFHLEVBQUUsS0FBSyxFQUFDOztBQUN2QixhQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUMzRCxhQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQ3RDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLEVBQUMsbUJBQW1CLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FDOUQsT0FBTyxDQUFDLHNCQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7OzZDQUNsQixnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0tBQzFDLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQyxDQUFDO0NBQ0wsQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvdW5pdC9hcHBpdW0tZm9yLW1hYy1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBBcHBpdW1Gb3JNYWMgZnJvbSAnLi4vLi4vbGliL2FwcGl1bS1mb3ItbWFjJztcbmltcG9ydCB7IHdpdGhTYW5kYm94IH0gZnJvbSAnYXBwaXVtLXRlc3Qtc3VwcG9ydCc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZnVuY3Rpb24gYnVpbGRBcHBpdW1Gb3JNYWNPcHRzICgpIHtcbiAgcmV0dXJuIHtcbiAgICBhcHA6ICdmb28nLFxuICAgIHBsYXRmb3JtTmFtZTogJ01hYycsXG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgcG9ydDogNDYyM1xuICB9O1xufVxuXG5kZXNjcmliZSgnQXBwaXVtRm9yTWFjJywgZnVuY3Rpb24gKCkge1xuICBkZXNjcmliZSgnI3N0YXJ0U2Vzc2lvbicsIHdpdGhTYW5kYm94KHt9LCAoUykgPT4ge1xuICAgIGxldCBhcHBpdW00TWFjRHJpdmVyID0gbmV3IEFwcGl1bUZvck1hYyhidWlsZEFwcGl1bUZvck1hY09wdHMoKSk7XG5cbiAgICBhZnRlckVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgUy52ZXJpZnkoKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgc3RhcnQgYSBzZXNzaW9uJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgbGV0IGNhcHMgPSB7Zm9vOiAnYmFyJ307XG4gICAgICBTLm1vY2tzLmp3cHJveHkgPSBTLnNhbmRib3gubW9jayhhcHBpdW00TWFjRHJpdmVyLmp3cHJveHkpO1xuICAgICAgUy5tb2Nrcy5qd3Byb3h5LmV4cGVjdHMoXCJjb21tYW5kXCIpLm9uY2UoKVxuICAgICAgICAud2l0aEV4YWN0QXJncyhcIi9zZXNzaW9uXCIsIFwiUE9TVFwiLCB7ZGVzaXJlZENhcGFiaWxpdGllczogY2Fwc30pXG4gICAgICAgIC5yZXR1cm5zKEIucmVzb2x2ZSgpKTtcbiAgICAgIGF3YWl0IGFwcGl1bTRNYWNEcml2ZXIuc3RhcnRTZXNzaW9uKGNhcHMpO1xuICAgIH0pO1xuICB9KSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
