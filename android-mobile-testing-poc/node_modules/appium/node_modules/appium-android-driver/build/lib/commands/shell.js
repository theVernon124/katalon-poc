'use strict';

var _toConsumableArray = require('babel-runtime/helpers/to-consumable-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _teen_process = require('teen_process');

var _shellQuote = require('shell-quote');

var commands = {};

commands.mobileShell = function callee$0$0() {
  var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var command, _opts$args, args, _opts$timeout, timeout, includeStderr, adbArgs, _ref, stdout, stderr;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.relaxedSecurityEnabled) {
          _logger2['default'].errorAndThrow('Appium server must have relaxed security flag set in order to run any shell commands');
        }

        command = opts.command;
        _opts$args = opts.args;
        args = _opts$args === undefined ? [] : _opts$args;
        _opts$timeout = opts.timeout;
        timeout = _opts$timeout === undefined ? 20000 : _opts$timeout;
        includeStderr = opts.includeStderr;

        if (!_lodash2['default'].isString(command)) {
          _logger2['default'].errorAndThrow('The \'command\' argument is mandatory\'');
        }

        adbArgs = [].concat(_toConsumableArray(this.adb.executable.defaultArgs), ['shell', command], _toConsumableArray(_lodash2['default'].isArray(args) ? args : [args]));

        _logger2['default'].debug('Running \'' + this.adb.executable.path + ' ' + (0, _shellQuote.quote)(adbArgs) + '\'');
        context$1$0.prev = 10;
        context$1$0.next = 13;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)(this.adb.executable.path, adbArgs, { timeout: timeout }));

      case 13:
        _ref = context$1$0.sent;
        stdout = _ref.stdout;
        stderr = _ref.stderr;

        if (!includeStderr) {
          context$1$0.next = 18;
          break;
        }

        return context$1$0.abrupt('return', {
          stdout: stdout,
          stderr: stderr
        });

      case 18:
        return context$1$0.abrupt('return', stdout);

      case 21:
        context$1$0.prev = 21;
        context$1$0.t0 = context$1$0['catch'](10);

        _logger2['default'].errorAndThrow('Cannot execute the \'' + command + '\' shell command. ' + ('Original error: ' + context$1$0.t0.message + '. ') + ('StdOut: ' + context$1$0.t0.stdout + '. StdErr: ' + context$1$0.t0.stderr));

      case 24:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[10, 21]]);
};

exports.commands = commands;
exports['default'] = commands;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9zaGVsbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7c0JBQWdCLFdBQVc7Ozs7c0JBQ2IsUUFBUTs7Ozs0QkFDRCxjQUFjOzswQkFDYixhQUFhOztBQUVuQyxJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7O0FBRWxCLFFBQVEsQ0FBQyxXQUFXLEdBQUc7TUFBZ0IsSUFBSSx5REFBRyxFQUFFOztNQU01QyxPQUFPLGNBQ1AsSUFBSSxpQkFDSixPQUFPLEVBQ1AsYUFBYSxFQU9ULE9BQU8sUUFRSixNQUFNLEVBQUUsTUFBTTs7Ozs7QUF2QnZCLFlBQUksQ0FBQyxJQUFJLENBQUMsc0JBQXNCLEVBQUU7QUFDaEMsOEJBQUksYUFBYSx3RkFBd0YsQ0FBQztTQUMzRzs7QUFHQyxlQUFPLEdBSUwsSUFBSSxDQUpOLE9BQU87cUJBSUwsSUFBSSxDQUhOLElBQUk7QUFBSixZQUFJLDhCQUFHLEVBQUU7d0JBR1AsSUFBSSxDQUZOLE9BQU87QUFBUCxlQUFPLGlDQUFHLEtBQUs7QUFDZixxQkFBYSxHQUNYLElBQUksQ0FETixhQUFhOztBQUdmLFlBQUksQ0FBQyxvQkFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFDeEIsOEJBQUksYUFBYSwyQ0FBd0MsQ0FBQztTQUMzRDs7QUFFSyxlQUFPLGdDQUNSLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsSUFDbEMsT0FBTyxFQUNQLE9BQU8sc0JBQ0gsb0JBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQzs7QUFFckMsNEJBQUksS0FBSyxnQkFBYSxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLFNBQUksdUJBQU0sT0FBTyxDQUFDLFFBQUksQ0FBQzs7O3lDQUVwQyx3QkFBSyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEVBQUMsT0FBTyxFQUFQLE9BQU8sRUFBQyxDQUFDOzs7O0FBQTFFLGNBQU0sUUFBTixNQUFNO0FBQUUsY0FBTSxRQUFOLE1BQU07O2FBQ2pCLGFBQWE7Ozs7OzRDQUNSO0FBQ0wsZ0JBQU0sRUFBTixNQUFNO0FBQ04sZ0JBQU0sRUFBTixNQUFNO1NBQ1A7Ozs0Q0FFSSxNQUFNOzs7Ozs7QUFFYiw0QkFBSSxhQUFhLENBQUMsMEJBQXVCLE9BQU8sZ0RBQ1gsZUFBSSxPQUFPLFFBQUksaUJBQ3ZCLGVBQUksTUFBTSxrQkFBYSxlQUFJLE1BQU0sQ0FBRSxDQUFDLENBQUM7Ozs7Ozs7Q0FFckUsQ0FBQzs7UUFFTyxRQUFRLEdBQVIsUUFBUTtxQkFDRixRQUFRIiwiZmlsZSI6ImxpYi9jb21tYW5kcy9zaGVsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2cgZnJvbSAnLi4vbG9nZ2VyJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBleGVjIH0gZnJvbSAndGVlbl9wcm9jZXNzJztcbmltcG9ydCB7IHF1b3RlIH0gZnJvbSAnc2hlbGwtcXVvdGUnO1xuXG5sZXQgY29tbWFuZHMgPSB7fTtcblxuY29tbWFuZHMubW9iaWxlU2hlbGwgPSBhc3luYyBmdW5jdGlvbiAob3B0cyA9IHt9KSB7XG4gIGlmICghdGhpcy5yZWxheGVkU2VjdXJpdHlFbmFibGVkKSB7XG4gICAgbG9nLmVycm9yQW5kVGhyb3coYEFwcGl1bSBzZXJ2ZXIgbXVzdCBoYXZlIHJlbGF4ZWQgc2VjdXJpdHkgZmxhZyBzZXQgaW4gb3JkZXIgdG8gcnVuIGFueSBzaGVsbCBjb21tYW5kc2ApO1xuICB9XG5cbiAgY29uc3Qge1xuICAgIGNvbW1hbmQsXG4gICAgYXJncyA9IFtdLFxuICAgIHRpbWVvdXQgPSAyMDAwMCxcbiAgICBpbmNsdWRlU3RkZXJyLFxuICB9ID0gb3B0cztcblxuICBpZiAoIV8uaXNTdHJpbmcoY29tbWFuZCkpIHtcbiAgICBsb2cuZXJyb3JBbmRUaHJvdyhgVGhlICdjb21tYW5kJyBhcmd1bWVudCBpcyBtYW5kYXRvcnknYCk7XG4gIH1cblxuICBjb25zdCBhZGJBcmdzID0gW1xuICAgIC4uLnRoaXMuYWRiLmV4ZWN1dGFibGUuZGVmYXVsdEFyZ3MsXG4gICAgJ3NoZWxsJyxcbiAgICBjb21tYW5kLFxuICAgIC4uLihfLmlzQXJyYXkoYXJncykgPyBhcmdzIDogW2FyZ3NdKVxuICBdO1xuICBsb2cuZGVidWcoYFJ1bm5pbmcgJyR7dGhpcy5hZGIuZXhlY3V0YWJsZS5wYXRofSAke3F1b3RlKGFkYkFyZ3MpfSdgKTtcbiAgdHJ5IHtcbiAgICBjb25zdCB7c3Rkb3V0LCBzdGRlcnJ9ID0gYXdhaXQgZXhlYyh0aGlzLmFkYi5leGVjdXRhYmxlLnBhdGgsIGFkYkFyZ3MsIHt0aW1lb3V0fSk7XG4gICAgaWYgKGluY2x1ZGVTdGRlcnIpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0ZG91dCxcbiAgICAgICAgc3RkZXJyXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gc3Rkb3V0O1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBsb2cuZXJyb3JBbmRUaHJvdyhgQ2Fubm90IGV4ZWN1dGUgdGhlICcke2NvbW1hbmR9JyBzaGVsbCBjb21tYW5kLiBgICtcbiAgICAgICAgICAgICAgICAgICAgICBgT3JpZ2luYWwgZXJyb3I6ICR7ZXJyLm1lc3NhZ2V9LiBgICtcbiAgICAgICAgICAgICAgICAgICAgICBgU3RkT3V0OiAke2Vyci5zdGRvdXR9LiBTdGRFcnI6ICR7ZXJyLnN0ZGVycn1gKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgY29tbWFuZHMgfTtcbmV4cG9ydCBkZWZhdWx0IGNvbW1hbmRzO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
